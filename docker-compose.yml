services:
  discord-bot:
    build: 
      context: .
      args:
        MODE: ${BOT_MODE:-prod}
    container_name: ${CONTAINER_NAME:-cozy-discord-bot}
    restart: ${RESTART_POLICY:-unless-stopped}
    environment:
      - DISCORD_BOT_TOKEN=${DISCORD_BOT_TOKEN}
      - ENVIRONMENT=${ENVIRONMENT:-production}
    volumes:
      # Volumes de base toujours montés
      - ./voice_time_data.json:/app/voice_time_data.json
      - bot-logs:/app/logs
      # Volume conditionnel pour le développement
      - ${DEV_CODE_MOUNT:-/tmp/empty}:/app/code:rw
      # Fichier d'environnement spécifique
      - ${ENV_FILE_PATH:-/tmp/empty}:/app/.env.local:ro
    networks:
      - bot-network
    # Commande par défaut (peut être surchargée)
    command: sh -c "${BOT_COMMAND:-python3 main.py}"
    # Health check conditionnel
    healthcheck:
      test: ${HEALTH_CHECK_CMD:-["CMD", "python3", "-c", "import discord; print('Bot dependencies OK')"]}
      interval: ${HEALTH_CHECK_INTERVAL:-30s}
      timeout: ${HEALTH_CHECK_TIMEOUT:-10s}
      retries: ${HEALTH_CHECK_RETRIES:-3}
      start_period: ${HEALTH_CHECK_START:-40s}
      disable: ${HEALTH_CHECK_DISABLE:-false}

volumes:
  bot-logs:
    name: ${VOLUME_NAME:-cozy-bot-logs}

networks:
  bot-network:
    name: ${NETWORK_NAME:-cozy-bot-network}
    driver: bridge